<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Finagle blog</title>
  <id>https://finagle.github.io/blog</id>
  <link href="https://finagle.github.io/blog"/>
  <link href="https://finagle.github.io/blog/blog/feed.xml" rel="self"/>
  <updated>2018-11-13T00:00:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>November 2018 Relase Notes - Version 18.11.0 ❄️</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2018/11/13/release-notes/"/>
    <id>https://finagle.github.io/blog/2018/11/13/release-notes/</id>
    <published>2018-11-13T00:00:00Z</published>
    <updated>2018-11-13T16:14:20-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Halloween has come and gone and it&amp;rsquo;s already snowing here in the Rockies. Time to cuddle up with a warm compiler and check out the new edition of Twitter&amp;rsquo;s open source libraries!&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finagle/"&gt;Finagle&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-base-http: Add &lt;code&gt;Message.httpDateFormat(millis)&lt;/code&gt; to format the epoch millis into
an RFC 7231 formatted String representation. &lt;a href="https://github.com/twitter/finagle/commit/eb9bec0ec83792a1bfb1e1fc94ecd214efdf0c48"&gt;eb9bec0e&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Introduce an &lt;code&gt;StackClient.withStack&lt;/code&gt; overload that
makes modifying the existing &lt;code&gt;Stack&lt;/code&gt; easier when using method chaining.
&lt;a href="https://github.com/twitter/finagle/commit/8f69e83366c7e275fbe1cbf7671f04e0e3daab70"&gt;8f69e833&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-mysql: Introduce &lt;code&gt;session&lt;/code&gt; to be able to perform multiple operations that require
session state on a guaranteed single connection. &lt;a href="https://github.com/twitter/finagle/commit/a06f7d672dce4b9e131356634f18e168e68f3692"&gt;a06f7d67&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-netty4: When using the native epoll transport, finagle now publishes the TCP window size
and number of retransmits based on the &lt;code&gt;tcpInfo&lt;/code&gt; provided by from the channel.  These stats are
published with a debug verbosity level.  &lt;a href="https://github.com/twitter/finagle/commit/160710883174e35d01f8460a80c4ad616653961a"&gt;16071088&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: HTTP clients and servers now accept &lt;code&gt;fixedLengthStreamedAfter&lt;/code&gt; param in their
&lt;code&gt;withStreaming&lt;/code&gt; configuration (default: 5 MB when streaming is enabled). This new parameter
controls the limit after which Finagle will stop aggregating messages with known &lt;code&gt;Content-Length&lt;/code&gt;
(payload will be available at &lt;code&gt;.content&lt;/code&gt;) and switch into a streaming mode (payload will be
available at &lt;code&gt;.reader&lt;/code&gt;). Note messages with &lt;code&gt;Transfer-Encoding: chunked&lt;/code&gt; never aggregated.
&lt;a href="https://github.com/twitter/finagle/commit/842e5e1a2b5613307add41fd064ebb589cc22bef"&gt;842e5e1a&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-http: &lt;code&gt;c.t.f.http.param.MaxChunkSize&lt;/code&gt; has been removed. There is no good reason to
configure it with anything but &lt;code&gt;Int.MaxValue&lt;/code&gt; (unlimited). &lt;a href="https://github.com/twitter/finagle/commit/990c8650366e5374ea062c753a4628c5971fc40e"&gt;990c8650&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-exp: Update &lt;code&gt;DarkTrafficFilter#handleFailedInvocation&lt;/code&gt; to accept the request type
for more fidelity in handling the failure. &lt;a href="https://github.com/twitter/finagle/commit/b247f941e97fe5c3bcf667ae69c27128f3cf1c52"&gt;b247f941&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-http: Unset &lt;code&gt;maxChunkSize&lt;/code&gt; limit in Netty HTTP codecs. Now both clients and servers
emit all available data as a single chunk so we can put it into use quicker.
&lt;a href="https://github.com/twitter/finagle/commit/990c8650366e5374ea062c753a4628c5971fc40e"&gt;990c8650&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: Streaming clients (&lt;code&gt;withStreaming(true)&lt;/code&gt;) now aggregate inbound messages with known
&lt;code&gt;Content-Length&lt;/code&gt; if their payloads are less than 5mb (8k before). Use &lt;code&gt;withStreaming(true, 32.kb)&lt;/code&gt;
to override it with a different value. &lt;a href="https://github.com/twitter/finagle/commit/24271b29e5030230e16d9b628de1a7ab029e99e5"&gt;24271b29&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http2: HTTP/2 servers perform a more graceful shutdown where an initial
GOAWAY is sent with the maximum possible stream id and waits for either the client
to hang up or for the close deadline, at which time a second GOAWAY is sent with
the true last processed stream and the connection is then closed.
&lt;a href="https://github.com/twitter/finagle/commit/93fee4994e3ac83078a4342be5d8a31f921a094f"&gt;93fee499&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Deprecations&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;finagle-core: Deprecate
&lt;code&gt;EndpointerStackClient.transformed(Stack[ServiceFactory[Req, Rep]] =&amp;gt; Stack[ServiceFactory[Req, Rep]])&lt;/code&gt;
in favor of the &lt;code&gt;withStack&lt;/code&gt; variant. &lt;a href="https://github.com/twitter/finagle/commit/8f69e83366c7e275fbe1cbf7671f04e0e3daab70"&gt;8f69e833&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finatra/"&gt;Finatra&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Changed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: Fixes and improvements for better Java support. ExceptionMappingFilter now
works properly with generated Java controllers, added an exception mapper for the exceptions
defined in &lt;code&gt;finatra_thrift_exceptions.thrift&lt;/code&gt; which works on the geneated Java code for these
exceptions. Better Java API separation to make usage less error prone and confusing.
&lt;a href="https://github.com/twitter/finatra/commit/f6c44cab87d1f9023e6028b76c61ce1920710a7b"&gt;f6c44cab&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: (BREAKING API CHANGE) Update &lt;code&gt;DarkTrafficFilter#handleFailedInvocation&lt;/code&gt; to accept
the request type for more fidelity in handling the failure. &lt;a href="https://github.com/twitter/finatra/commit/20bd33acdb443545d65a68fec2032c764564a2d4"&gt;20bd33ac&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-http: Move &lt;code&gt;request.ContentType&lt;/code&gt; and &lt;code&gt;response.Mustache&lt;/code&gt; Java annotations to
&lt;code&gt;com.twitter.finatra.http&lt;/code&gt; package namespace. &lt;a href="https://github.com/twitter/finatra/commit/ef13561030cb38d56c15c6030974eda0e1131c40"&gt;ef135610&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-jackson: Move away from deprecated code and update error handling and exceptions post
Jackson 2.9.x upgrade. &lt;a href="https://github.com/twitter/finatra/commit/f1e5c96ebc6b6baaf244df382f764ae028b5abd3"&gt;f1e5c96e&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;inject-core: (BREAKING API CHANGE) Remove &lt;code&gt;c.t.inject.TestMixin#sleep&lt;/code&gt;. We do not want to
promote this usage of Thread blocking in testing utilities. Add a new testing function:
&lt;code&gt;c.t.inject.TestMixin#await&lt;/code&gt; which will perform &lt;code&gt;Await.result&lt;/code&gt; on a given &lt;code&gt;c.t.util.Awaitable&lt;/code&gt;.
This function was duplicated across tests in the codebase. We also introduce an overridable default
timeout on the underlying &lt;code&gt;Await.result&lt;/code&gt; call: &lt;code&gt;c.t.inject.TestMixin#defaultAwaitTimeout&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finatra/commit/4aee1051fd3656486e0c7c2d910cf90c2179871a"&gt;4aee1051&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Fixed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;finatra-http: Fix registration of HTTP Routes in the Library registry to properly account
for Routes that duplicate a URI with a different HTTP verb. That is, a Route should be considered
unique per URI + HTTP verb combination. &lt;a href="https://github.com/twitter/finatra/commit/6a7150759e7ccb9ae9c77269223bda182bb19d13"&gt;6a715075&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/scrooge/"&gt;Scrooge&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;scrooge-generator: Allow for &lt;code&gt;Filter.TypeAgnostic&lt;/code&gt; filters to be applied to a generated
Java &lt;code&gt;Service&lt;/code&gt; via a new constructor that takes an additional argument of a &lt;code&gt;Filter.TypeAgnostic&lt;/code&gt;.
This filter is then applied per generated method service. &lt;a href="https://github.com/twitter/scrooge/commit/19c7d58b907006e3403fdc9828abe55cb843c276"&gt;19c7d58b&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/twitter-server/"&gt;Twitter Server&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;No Changes&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/util/"&gt;Util&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;util-core: &lt;code&gt;c.t.u.Future.raiseWithin&lt;/code&gt; methods now take the timeout exception as a call-by-name
parameter instead of a strict exception. While Scala programs should compile as usual, Java
users will need to use a &lt;code&gt;scala.Function0&lt;/code&gt; as the second parameter. The helper
&lt;code&gt;c.t.u.Function.func0&lt;/code&gt; can be helpful. &lt;a href="https://github.com/twitter/util/commit/9bde57caffa7e127967fb2452beab3d09fd9888e"&gt;9bde57ca&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Rename &lt;code&gt;c.t.io.Reader.ReaderDiscarded&lt;/code&gt; to &lt;code&gt;c.t.io.ReaderDiscardedException&lt;/code&gt;.
&lt;a href="https://github.com/twitter/util/commit/a970c5b5ddf9cb66a63693aa5cf7709d177a234a"&gt;a970c5b5&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;util-core: Made Stopwatch.timeNanos monotone. &lt;a href="https://github.com/twitter/util/commit/8d35b496756172e9bb29c473d77e32f6414806e6"&gt;8d35b496&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>October 2018 Release Notes — Version 18.10.0</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2018/10/24/release-notes/"/>
    <id>https://finagle.github.io/blog/2018/10/24/release-notes/</id>
    <published>2018-10-24T00:00:00Z</published>
    <updated>2018-11-13T10:01:57-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Here we are in the month of October, just a few weeks until creatures of
fantasy roam the streets together with people dressed up as creatures of
fantasy 👹.&lt;/p&gt;

&lt;p&gt;Speaking of the fantastic, we have new releases!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/twitter/finagle/releases/tag/finagle-18.10.0"&gt;Finagle 18.10.0&lt;/a&gt;,
&lt;a href="https://github.com/twitter/finatra/releases/tag/finatra-18.10.0"&gt;Finatra 18.10.0&lt;/a&gt;,
&lt;a href="https://github.com/twitter/scrooge/releases/tag/scrooge-18.10.0"&gt;Scrooge 18.10.0&lt;/a&gt;,
&lt;a href="https://github.com/twitter/twitter-server/releases/tag/twitter-server-18.10.0"&gt;TwitterServer 18.10.0&lt;/a&gt;,
and &lt;a href="https://github.com/twitter/util/releases/tag/util-18.10.0"&gt;Util 18.10.0&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finagle/"&gt;Finagle&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Deprecations&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;finagle-core: Deprecation warnings have been removed from the &amp;lsquo;status&amp;rsquo;, &amp;lsquo;onClose&amp;rsquo;,
and &amp;lsquo;close&amp;rsquo; methods on &lt;code&gt;c.t.f.t.Transport&lt;/code&gt;, and added to the corresponding methods
on &lt;code&gt;c.t.f.t.TransportContext&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/9ae6d978c9b0c77309e7d199f6f71c6cc5d58586"&gt;9ae6d978&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;finagle-netty3: Implementations for &amp;lsquo;status&amp;rsquo;, &amp;lsquo;onClose&amp;rsquo;, and &amp;lsquo;close&amp;rsquo; methods have
been moved from &lt;code&gt;c.t.f.n.t.ChannelTransportContext&lt;/code&gt; to &lt;code&gt;c.t.f.n.t.ChannelTransport&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finagle/commit/9ae6d978c9b0c77309e7d199f6f71c6cc5d58586"&gt;9ae6d978&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finatra/"&gt;Finatra&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Fixed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;finatra-thrift: Set the bound &lt;code&gt;StatsReceiver&lt;/code&gt; in the underlying Finagle &lt;code&gt;ThriftMux&lt;/code&gt; server
in the &lt;code&gt;c.t.finatra.thrift.ThriftServer&lt;/code&gt;. This prevented testing of underlying Finagle server
stats as the &lt;code&gt;InMemoryStatsReceiver&lt;/code&gt; used by the &lt;code&gt;EmbeddedThriftServer&lt;/code&gt; was not properly passed
all the way through the stack. &lt;a href="https://github.com/twitter/finatra/commit/33d0524b76f943c5661c0b21ff0d38c1d6563202"&gt;33d0524b&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Changed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finatra-http, finatra-thrift: Make HTTP and Thrift StatsFitlers &amp;ldquo;Response Classification&amp;rdquo;
aware. &lt;a href="https://github.com/twitter/finatra/commit/4085d40cb7cb607101564bbc488f9a1daea56dff"&gt;4085d40c&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-http, finatra-thrift: (BREAKING API CHANGE) Update the &lt;code&gt;DarkTrafficFilterModule&lt;/code&gt; in
both HTTP and Thrift to allow for specifying further configuration of the underlying Finagle client.
This allows users the ability to set Finagle client concerns like ResponseClassification or other
configuration not expressed by the DarkTrafficFilterModule&amp;rsquo;s API.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Additionally, the Thrift &lt;code&gt;DarkTrafficFilterModule&lt;/code&gt; has been updated to be ThriftMux only. For more information on mux see: &lt;a href="https://twitter.github.io/finagle/guide/FAQ.html?highlight=thriftmux#what-is-thriftmux"&gt;What is ThriftMux&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;We also update the &lt;code&gt;enableSampling&lt;/code&gt; method to accept a &lt;code&gt;c.t.inject.Injector&lt;/code&gt; to aid in the decision-making for if a given request should be &amp;ldquo;sampled&amp;rdquo; by the filter. &lt;a href="https://github.com/twitter/finatra/commit/d74868430cf6b0da2051b3ff0f2d1e47e6c0c169"&gt;d7486843&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: (BREAKING API CHANGE) Update &lt;code&gt;c.t.finatra.thrift.routing.ThriftRouter&lt;/code&gt; API for
adding Java Thrift controllers. The &lt;code&gt;service: Class[_]&lt;/code&gt; was rendered unnecessary some time ago
but not removed from the API signature. Because this parameter is useless and it shadows
another variable inside of the code we remove it from the signature altogether rather than
deprecating the API. &lt;a href="https://github.com/twitter/finatra/commit/c2378cc7b61bce18afa65ff5b76175dfaecd7b13"&gt;c2378cc7&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: Rename &lt;code&gt;defaultFinatraThriftPort&lt;/code&gt; to &lt;code&gt;defaultThriftPort&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finatra/commit/5910fd2358ad0e9e9c8ee1c25b549afabfee199f"&gt;5910fd23&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/scrooge/"&gt;Scrooge&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;scrooge: Add type annotations to public members in generated code.
&lt;a href="https://github.com/twitter/scrooge/commit/5cad10055fb9fa45f7b2659bf5830745e9fc472b"&gt;5cad1005&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/twitter-server/"&gt;Twitter Server&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Deprecate &lt;code&gt;c.t.server.AdminHttpServer#routes&lt;/code&gt;. Routes should be added to the &lt;code&gt;AdminHttpServer&lt;/code&gt;
via &lt;code&gt;c.t.server.AdminHttpServer#addAdminRoutes&lt;/code&gt;. &lt;a href="https://github.com/twitter/twitter-server/commit/4078e4cb39812f1085bd38fdcaca2de35f2dffc7"&gt;4078e4cb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Update &lt;code&gt;BuildProperties&lt;/code&gt; to not emit a warning when no &lt;code&gt;build.properties&lt;/code&gt; file can be
located. &lt;a href="https://github.com/twitter/twitter-server/commit/7ce6e4cbcaf3ac9d9dccd62a5aaf9c9572cf5788"&gt;7ce6e4cb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/util/"&gt;Util&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;util-core: &lt;code&gt;c.t.io.Reader.Writable&lt;/code&gt; and &lt;code&gt;c.t.Reader.writable()&lt;/code&gt; are removed. Use &lt;code&gt;c.t.io.Pipe&lt;/code&gt;
instead. &lt;a href="https://github.com/twitter/util/commit/5ef6a0dca89dad4488ce33cd1ea5a2f8eab1bb7a"&gt;5ef6a0dc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: &lt;code&gt;c.t.util.TempFolder&lt;/code&gt; has been moved to &lt;code&gt;c.t.io.TempFolder&lt;/code&gt;. &lt;a href="https://github.com/twitter/util/commit/2f8ee9048431a7cdf10333390b0eb2e1c2df08cd"&gt;2f8ee904&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Removed the forwarding types &lt;code&gt;c.t.util.TimeConversions&lt;/code&gt; and
&lt;code&gt;c.t.util.StorageUnitConversions&lt;/code&gt;. Use &lt;code&gt;c.t.conversions.time&lt;/code&gt; and
&lt;code&gt;c.t.conversions.storage&lt;/code&gt; directly. &lt;a href="https://github.com/twitter/util/commit/0c83ebc0ae1d6d62fabf80a48bca501c6457440f"&gt;0c83ebc0&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: &lt;code&gt;c.t.concurrent.AsyncStream.fromReader&lt;/code&gt; has been moved to
&lt;code&gt;c.t.io.Reader.toAsyncStream&lt;/code&gt;. &lt;a href="https://github.com/twitter/util/commit/6c3be47d69bf628a9b87146309e2e02844a2d25b"&gt;6c3be47d&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;util-core: &lt;code&gt;c.t.io.Reader.fromBuf&lt;/code&gt; (&lt;code&gt;BufReader&lt;/code&gt;), &lt;code&gt;c.t.io.Reader.fromFile&lt;/code&gt;,
&lt;code&gt;c.t.io.Reader.fromInputStream&lt;/code&gt; (&lt;code&gt;InputStreamReader&lt;/code&gt;) now take an additional parameter,
&lt;code&gt;chunkSize&lt;/code&gt;, the upper bound of the number of bytes that a given reader emits at each read.
&lt;a href="https://github.com/twitter/util/commit/719f41a65b723c21d03348d02989c93e293beb42"&gt;719f41a6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;util-core: &lt;code&gt;c.t.u.Duration.inTimeUnit&lt;/code&gt; can now return
&lt;code&gt;j.u.c.TimeUnit.MINUTES&lt;/code&gt;. &lt;a href="https://github.com/twitter/util/commit/0daac8d785b02bc819b1464c695f17a28ffb3384"&gt;0daac8d7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Fall Update 🍂</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2018/10/18/fall-review/"/>
    <id>https://finagle.github.io/blog/2018/10/18/fall-review/</id>
    <published>2018-10-18T00:00:00Z</published>
    <updated>2018-11-13T10:01:57-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Fall is here! If you live in Boulder, you might take a 🚶and &lt;a href="https://twitter.com/davidjrusek/status/1050100034157637632"&gt;watch coyotes
hunt prairie dogs&lt;/a&gt;.
The new season brings about a change of clothes, but what about a change of
code? Upgrade to the &lt;a href="https://github.com/twitter/finagle/releases/latest"&gt;latest Finagle
version&lt;/a&gt; and enjoy the new
features, APIs, and bug fixes! Here&amp;rsquo;s a breakdown of what&amp;rsquo;s new.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developer experience&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We continue evolving Reader/Writer APIs to make them more friendly for
application-level development. This part is nearly done and our next step is
to adopt said APIs in both Finagle and Finatra, providing their users with a
seamless developer experience. (&lt;a href="https://github.com/twitter/finagle/commit/5242d49d8e6aa9041626311ae66405b2634136b2"&gt;1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Tunables are now observable via Vars. (&lt;a href="https://github.com/twitter/util/commit/94864832a593f5f75c696c8dab913ceba69e81dc"&gt;1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Lots of examples of how to use Future. (&lt;a href="https://github.com/twitter/util/commit/3e9d68fadfc8c0d008242245e06715491b46575b"&gt;1&lt;/a&gt;, &lt;a href="https://github.com/twitter/util/commit/6b41ef4711ede2dc1590725f6042da68f33fac5d"&gt;2&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;HTTP2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;MANY performance improvements. We no longer consider h2c
experimental! This will be on by default in the next few months.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resiliency&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Thrift and ThriftMux servers now feature Response Classification to better
indicate their success rate.&lt;/li&gt;
&lt;li&gt;New and improved Tracing. This work dramatically reduces the number of
context lookups. (&lt;a href="https://github.com/twitter/finagle/commit/547cd86465109e6777d2afb98a7560d6a053b7b4"&gt;1&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/commit/50c00d8847e0e5f3ade029ee3a51b5e2e795f115"&gt;2&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/commit/33841d214af7506750d6106fdeb0d95fbd95cc42"&gt;3&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/commit/5a5ceb63740480381a2a137474afa5c39ad23981"&gt;4&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/commit/5a5ceb63740480381a2a137474afa5c39ad23981"&gt;5&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Finatra security update. Jackson Upgraded 2.8.4 =&amp;gt; 2.9.6, plugs
&lt;a href="https://nvd.nist.gov/vuln/detail/CVE-2017-7525"&gt;CVE-2017-7525&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Future.transform&lt;/code&gt; creates a new &lt;code&gt;Promise&lt;/code&gt; every time it is called, but
sometimes we can operate directly on a &lt;code&gt;Try&lt;/code&gt;, whose operations are much
simpler and less costly. Since &lt;code&gt;transform&lt;/code&gt; is fundamental to many other
future operations, the result is faster futures. (&lt;a href="https://github.com/twitter/util/commit/3245a8e1a98bd5eb308f366678528879d7140f5e"&gt;1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid unnecessary deep copies in Local.Context. (&lt;a href="https://github.com/twitter/util/commit/faaf0f2fe27520d47f896099bb8dc5f34b5d3c6a"&gt;1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Push is now the default implementation for ThriftMux. We removed the previous
implementation because we saw that Push improved throughput, CPU usage, and
allocations. (&lt;a href="https://github.com/twitter/finagle/commit/c0a1f295f58d699a77142ea2720965b63203cc89"&gt;1&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/commit/735a6bae3f8352b569ff153ec47d97a54914eee2"&gt;2&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/commit/735a6bae3f8352b569ff153ec47d97a54914eee2"&gt;3&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/commit/eedd1fd890da85c6efcdc0ff597e22055967d811"&gt;4&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Netty3 cookies are dead, long live Netty4 cookies?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We are &lt;em&gt;almost&lt;/em&gt; there. The last threshold to cross is decoupling cookie
validation logic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Finatra&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Custom AsyncAppender with StatsReceiver integration
(&lt;a href="https://twitter.github.io/finatra/user-guide/logging/asyncappender.html"&gt;1&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Better/easier configuration for https servers. (&lt;a href="https://github.com/twitter/finatra/commit/3c19b2df303a30fda254822dc97cb2372d2220b3"&gt;1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Travis-CI&lt;/strong&gt; MANY stability improvements.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Thanks for following along. If you&amp;rsquo;d like to know more about any one of these
updates, or if you have a question about them, join us on the
&lt;a href="https://groups.google.com/forum/#!forum/finaglers"&gt;Finagle&lt;/a&gt; or
&lt;a href="https://groups.google.com/forum/#!forum/finatra-users"&gt;Finatra&lt;/a&gt; mailing lists
or hop on &lt;a href="https://gitter.im/twitter/finagle"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy coding,&lt;/p&gt;

&lt;p&gt;Neuman and the Core Systems Libraries team&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>TravisCI Migration for the Finagle Org 🔧</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2018/10/03/travis-ci/"/>
    <id>https://finagle.github.io/blog/2018/10/03/travis-ci/</id>
    <published>2018-10-03T00:00:00Z</published>
    <updated>2018-11-13T10:01:57-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;TravisCI &lt;a href="https://blog.travis-ci.com/2018-05-02-open-source-projects-on-travis-ci-com-with-github-apps"&gt;announced&lt;/a&gt; that it is moving open source projects from &lt;a href="https://travis-ci.org/"&gt;travis-ci.org&lt;/a&gt; to &lt;a href="https://travis-ci.com/"&gt;travis-ci.com&lt;/a&gt; which will use &lt;a href="https://developer.github.com/v3/apps/"&gt;Github Apps&lt;/a&gt; for a tigther integration with Github.&lt;/p&gt;

&lt;p&gt;We plan on working with TravisCI to migrate the entirety of the &lt;a href="https://github.com/finagle"&gt;Finagle Org&lt;/a&gt; (&lt;a href="https://github.com/finagle"&gt;github.com/finagle&lt;/a&gt;). However, we wanted to alert the community that as part of this move, repositories under the &lt;a href="https://github.com/finagle"&gt;Finagle Org&lt;/a&gt; will &lt;strong&gt;lose their TravisCI build history&lt;/strong&gt;. We don&amp;rsquo;t expect that this is a big deal for projects in the org but wanted to give folks a heads up.&lt;/p&gt;

&lt;p&gt;We expect this transition to happen in the next few weeks. Please let us know if you have any questions or concerns!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Want to know more or have a question? Ask away at our &lt;a href="https://groups.google.com/forum/#!forum/finaglers"&gt;Finagle&lt;/a&gt; or
&lt;a href="https://groups.google.com/forum/#!forum/finatra-users"&gt;Finatra&lt;/a&gt; mailing lists or hop on &lt;a href="https://gitter.im/twitter/finagle"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Christopher Coco and the Core Systems Libraries team&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>⛱️ September 2018 Point Release Notes 🐚 — Version 18.9.1</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2018/09/27/point-release-notes/"/>
    <id>https://finagle.github.io/blog/2018/09/27/point-release-notes/</id>
    <published>2018-09-27T00:00:00Z</published>
    <updated>2018-11-13T10:01:57-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;September is beach season here in the Bay Area, and it looks like our release earlier
this month got caught in a wash cycle. So, we&amp;rsquo;ve made a point release.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See below for details on the &lt;code&gt;util-slf4j-api&lt;/code&gt; dependency fix for the reason
why we decided to do a point release.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/twitter/finagle/releases/tag/finagle-18.9.1"&gt;Finagle 18.9.1&lt;/a&gt;,
&lt;a href="https://github.com/twitter/finatra/releases/tag/finatra-18.9.1"&gt;Finatra 18.9.1&lt;/a&gt;,
&lt;a href="https://github.com/twitter/scrooge/releases/tag/scrooge-18.9.1"&gt;Scrooge 18.9.1&lt;/a&gt;,
&lt;a href="https://github.com/twitter/twitter-server/releases/tag/twitter-server-18.9.1"&gt;TwitterServer 18.9.1&lt;/a&gt;,
and &lt;a href="https://github.com/twitter/util/releases/tag/util-18.9.1"&gt;Util 18.9.1&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finagle/"&gt;Finagle&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-base-http: &lt;code&gt;DefaultHeaderMap&lt;/code&gt; now validates HTTP Header names and
values in &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt;. &lt;code&gt;addUnsafe&lt;/code&gt; and &lt;code&gt;setUnsafe&lt;/code&gt; have been created to
allow adding and setting headers without validation. &lt;a href="https://github.com/twitter/finagle/commit/3454f95dd3623b44e8de725fed7e29d4b84da45d"&gt;3454f95d&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Remove slow host detection from &lt;code&gt;ThresholdFailureDetector&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finagle/commit/c05f583224d570f92afe0b1520e3769b80b0e61b"&gt;c05f5832&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: When Finagle would exhaust a retry budget with an exception that was
not a &lt;code&gt;FailureFlags&lt;/code&gt;, previously it would wrap that exception with a non-retryable
failure. This lead to surprising behavior for users. Those exceptions will no longer
be wrapped. &lt;a href="https://github.com/twitter/finagle/commit/4ece3d2aa5e893ad11969c93e981294d6a6ed754"&gt;4ece3d2a&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: The finagle HTTP clients and servers now consider a &lt;code&gt;Retry-After: 0&lt;/code&gt;
header to be a retryable nack. Servers will set this header when the response is
a retryable failure, and clients will interpret responses with this header as a
Failure.RetryableNackFailure. &lt;a href="https://github.com/twitter/finagle/commit/3c3fedc620cd010bfe524b27c54d7c91279a2200"&gt;3c3fedc6&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finatra/"&gt;Finatra&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Changed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;http/thrift: Update Library registry route information to include controller class name.
&lt;a href="https://github.com/twitter/finatra/commit/ffb644e5612b81602f7c653e69a8bf99b5c3eaa3"&gt;ffb644e5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/scrooge/"&gt;Scrooge&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;scrooge: Finally remove maven.twttr.com as a dependency or plugin repository. With
the update to a more recent libthrift dependency, this should no longer be necessary.
&lt;a href="https://github.com/twitter/scrooge/commit/44db8e16d0afbc90018a968f268d209068bf2bfc"&gt;44db8e16&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/twitter-server/"&gt;Twitter Server&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;No Changes&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/util/"&gt;Util&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;util-core: c.t.io.Writer now extends c.t.util.Closable. c.t.io.Writer.ClosableWriter
is no longer exist. &lt;a href="https://github.com/twitter/util/commit/9cc7025c52f8d52acc0ccc7f3f713103bf8fcd6a"&gt;9cc7025c&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Bug Fixes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;util-slf4j-api: Moved slf4j-simple dependency to be a &amp;lsquo;test&amp;rsquo; dependency, instead of a
compile dependency, which was inaccurate. &lt;a href="https://github.com/twitter/util/commit/3d6d7457d34055a9e9c86ffd112cc477fd557e0f"&gt;3d6d7457&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>⛱️ September 2018 Release Notes 🐚 — Version 18.9.0</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2018/09/18/release-notes/"/>
    <id>https://finagle.github.io/blog/2018/09/18/release-notes/</id>
    <published>2018-09-18T00:00:00Z</published>
    <updated>2018-11-13T10:01:57-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;September is beach season here in the Bay Area! Time to finally get out to the beach and
cut fresh new versions of our libraries.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/twitter/finagle/releases/tag/finagle-18.9.0"&gt;Finagle 18.9.0&lt;/a&gt;,
&lt;a href="https://github.com/twitter/finatra/releases/tag/finatra-18.9.0"&gt;Finatra 18.9.0&lt;/a&gt;,
&lt;a href="https://github.com/twitter/scrooge/releases/tag/scrooge-18.9.0"&gt;Scrooge 18.9.0&lt;/a&gt;,
&lt;a href="https://github.com/twitter/twitter-server/releases/tag/twitter-server-18.9.0"&gt;TwitterServer 18.9.0&lt;/a&gt;,
and &lt;a href="https://github.com/twitter/util/releases/tag/util-18.9.0"&gt;Util 18.9.0&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finagle/"&gt;Finagle&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: &lt;code&gt;c.t.f.FailureFlags&lt;/code&gt; is now a public API. This is Finagle&amp;rsquo;s
API for attaching metadata to an exception. As an example this is used to
check if an exception is known to be safe to retry. Java compatibility has
also been added. &lt;a href="https://github.com/twitter/finagle/commit/e6389831e527b8634de82ecbb275705578c0f688"&gt;e6389831&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Introducing StackTransformer, a consistent mechanism for
accessing and transforming the default ServerStack. &lt;a href="https://github.com/twitter/finagle/commit/0b6844cdfbc176a499b908d8cf71b171b3aac2d0"&gt;0b6844cd&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-netty4: Allow sockets to be configured with the &lt;a href="http://lwn.net/Articles/542629/"&gt;SO_REUSEPORT&lt;/a&gt; option
when using native epoll, which allows multiple processes to bind and accept connections
from the same port. &lt;a href="https://github.com/twitter/finagle/commit/0316ac8940f056b86e3d5463ba63b6033a539886"&gt;0316ac89&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: &lt;code&gt;Address.hashOrdering&lt;/code&gt; now takes a seed parameter and
&lt;code&gt;PeerCoordinate.setCoordinate&lt;/code&gt; does not take a &lt;code&gt;peerOffset&lt;/code&gt; any longer.
&lt;a href="https://github.com/twitter/finagle/commit/9e6734b21f55d0aed95e33dc299ce05b3c524748"&gt;9e6734b2&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Removed deprecated members &lt;code&gt;c.t.f.Failure.{Interrupted, Ignorable, DeadlineExceeded,
Rejected, NonRetryable, flagsOf}&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/54435221ae361b3eef3fe0b4b6846099f1504421"&gt;54435221&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: SingletonPool now takes an additional parameter which indicates if interrupts
should propagate to the underlying resource. &lt;a href="https://github.com/twitter/finagle/commit/c83ad5d1a3727ee8a8638bff8669cf37edecbeab"&gt;c83ad5d1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Remove &lt;code&gt;TimeoutFactory.Role&lt;/code&gt; in favor of passing a role to the &lt;code&gt;module&lt;/code&gt; function.
Since this module is a re-used within the client stack, it needs unique identifiers for each
distinct module. &lt;a href="https://github.com/twitter/finagle/commit/4c46b80d69108e079c7761425504d19647f152fd"&gt;4c46b80d&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: the valid range for the argument to &lt;code&gt;WindowedPercentileHistogram.percentile&lt;/code&gt;
is now [0.0..1.0], e.g., 0.95 means 95th percentile. &lt;a href="https://github.com/twitter/finagle/commit/8ad96f9619a889f93195e44b7f3be27c0cfebfd3"&gt;8ad96f96&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-mux: The old pull-based mux implementations have been removed. &lt;a href="https://github.com/twitter/finagle/commit/d1baeff95b7e464e2827d8800da6a3ef65526128"&gt;d1baeff9&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-netty3: The type of context of a &lt;code&gt;ChannelTransport&lt;/code&gt; has been changed from a
&lt;code&gt;LegacyContext&lt;/code&gt; to a &lt;code&gt;ChannelTransportContext&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/4cdd15d91180e3a05369063061cee213b3642e69"&gt;4cdd15d9&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-netty4: The type of context of a &lt;code&gt;ChannelTransport&lt;/code&gt; has been changed from a
&lt;code&gt;Netty4Context&lt;/code&gt; to a &lt;code&gt;ChannelTransportContext&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/edce8093e8e741b4b3f671702298ed4b06fb8735"&gt;edce8093&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-netty4: &lt;code&gt;c.t.f.netty4.param.useUnpoolledByteBufAllocator&lt;/code&gt; flag has been removed. There is
no good reason to opt-out of a more efficient, pooled allocator. &lt;a href="https://github.com/twitter/finagle/commit/07495a14672ff871a892355f1fcb0372c201dc48"&gt;07495a14&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift: &lt;code&gt;DeserializeCtx&lt;/code&gt; became &lt;code&gt;ClientDeserializeCtx&lt;/code&gt; for client side response
classification, add &lt;code&gt;ServerDeserializeCtx&lt;/code&gt; to handle server side response classification.
&lt;a href="https://github.com/twitter/finagle/commit/a8be34bdff98c794482f536ed6dd6432b7c23f06"&gt;a8be34bd&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-serversets: &lt;code&gt;ZkMetadata.shardHashOrdering&lt;/code&gt; now takes a seed parameter.
&lt;a href="https://github.com/twitter/finagle/commit/9e6734b21f55d0aed95e33dc299ce05b3c524748"&gt;9e6734b2&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Bug Fixes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift: Thrift clients created via &lt;code&gt;.servicePerEndpoint&lt;/code&gt; now propagate exceptions
appropriately when the method return type is void. &lt;a href="https://github.com/twitter/finagle/commit/bb2654e13674a2e6304be2354caa02387df52589"&gt;bb2654e1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift, finagle-thriftmux: Response classification is enabled in server side.
&lt;a href="https://github.com/twitter/finagle/commit/a8be34bdff98c794482f536ed6dd6432b7c23f06"&gt;a8be34bd&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-memcached: A Memcached client (&lt;code&gt;c.t.f.Memcached.Client&lt;/code&gt;) is now backed by a more efficient,
push-based implementation. &lt;a href="https://github.com/twitter/finagle/commit/c0a1f295f58d699a77142ea2720965b63203cc89"&gt;c0a1f295&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-netty4: Finagle&amp;rsquo;s Netty 4 implementation now defaults to use Linux&amp;rsquo;s native epoll
transport, when available. Run with &lt;code&gt;-com.twitter.finagle.netty4.useNativeEpoll=false&lt;/code&gt; to opt out.
&lt;a href="https://github.com/twitter/finagle/commit/137f56721fd7aa750101aee29203649d6f0e539c"&gt;137f5672&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finatra/"&gt;Finatra&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Changed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;inject-core: Remove unnecessary Await.result Future.Value in TestMixin. &lt;a href="https://github.com/twitter/finatra/commit/1616188cfb5414efa47d28618bde3b90abba0e63"&gt;1616188c&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/scrooge/"&gt;Scrooge&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;scrooge-generator: Scala and Java generated Thrift exceptions now implement &lt;code&gt;c.t.f.FailureFlags&lt;/code&gt;.
This allows exceptions to carry Finagle metadata such as non-retryable. &lt;a href="https://github.com/twitter/scrooge/commit/438599b0b15fb3c2bbdcf302fe18046a530071b1"&gt;438599b0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/twitter-server/"&gt;Twitter Server&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Move logic to parse the server &lt;code&gt;build.properties&lt;/code&gt; file out the &lt;code&gt;c.t.server.handler.ServerInfoHandler&lt;/code&gt;
and into a utility object, &lt;code&gt;c.t.server.BuildProperties&lt;/code&gt; to allow for accessing by other server
logic such that the properties do not need to be re-parsed anytime access is desired. Failure to
load the properties can result in the server not starting in the case of a Fatal exception
being thrown. &lt;a href="https://github.com/twitter/twitter-server/commit/4c193594053cd332ef2ff1602df82ad948024a7e"&gt;4c193594&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update &lt;code&gt;TwitterServer&lt;/code&gt; trait to override the inherited &lt;code&gt;ShutdownTimer&lt;/code&gt; to be the Finagle
&lt;code&gt;DefaultTimer&lt;/code&gt; instead of the &lt;code&gt;c.t.util.JavaTimer&lt;/code&gt; defined by default in &lt;code&gt;c.t.app.App&lt;/code&gt;. Also
update the overridden &lt;code&gt;suppressGracefulShutdownErrors&lt;/code&gt; in &lt;code&gt;TwitterServer&lt;/code&gt; to be a val since
it is constant (instead of a def). &lt;a href="https://github.com/twitter/twitter-server/commit/944b7294eea62769cc53e30f6ecab91a243fe444"&gt;944b7294&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/util/"&gt;Util&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;util-logging: New way to construct &lt;code&gt;ScribeHandler&lt;/code&gt; for java interoperability.
&lt;a href="https://github.com/twitter/util/commit/845620b48ea27c815b55ce1a7ce4deb54a1b2532"&gt;845620b4&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Added Reader#fromAsyncStream for consuming an &lt;code&gt;AsyncStream&lt;/code&gt; as a &lt;code&gt;Reader&lt;/code&gt;.
&lt;a href="https://github.com/twitter/util/commit/39ec9849814642fb46d0604f3da8aaa2437574ff"&gt;39ec9849&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Introducing &lt;code&gt;Reader.chunked&lt;/code&gt; that chunks the output of a given reader.
&lt;a href="https://github.com/twitter/util/commit/1a7c54f96e23e0d9c66bace6cae23b7e2f21a3a8"&gt;1a7c54f9&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Added Reader#framed for consuming data framed by a user supplied function.
&lt;a href="https://github.com/twitter/util/commit/2316aa5dcf68780d125124d9eb7cf62ba585844a"&gt;2316aa5d&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-security: Add &lt;code&gt;NullSslSession&lt;/code&gt; related objects for use with non-existent
&lt;code&gt;SSLSession&lt;/code&gt;s.  f&lt;a href="https://github.com/twitter/util/commit/12de479fa6cf7b13afdf9d2458a1bd5b01499d43"&gt;12de479f&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-tunable: Introducing &lt;code&gt;Tunable.asVar&lt;/code&gt; that allows observing changes to tunables.
&lt;a href="https://github.com/twitter/util/commit/94864832a593f5f75c696c8dab913ceba69e81dc"&gt;94864832&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;util-core: &lt;code&gt;c.t.io.Reader&lt;/code&gt; and &lt;code&gt;c.t.io.Writer&lt;/code&gt; are now abstracted over the type
they produce/consume (&lt;code&gt;Reader[A]&lt;/code&gt; and &lt;code&gt;Writer[A]&lt;/code&gt;) and are no longer fixed to &lt;code&gt;Buf&lt;/code&gt;.
&lt;a href="https://github.com/twitter/util/commit/7718fa298ab87e7843a5f6f136b7f92a4398561d"&gt;7718fa29&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: &lt;code&gt;InMemoryStatsReceiver&lt;/code&gt; now eagerly creates the mappings for &lt;code&gt;Counters&lt;/code&gt;
and &lt;code&gt;Stats&lt;/code&gt; instead of waiting for the first call to &lt;code&gt;Counter.incr&lt;/code&gt; and &lt;code&gt;Stat.add&lt;/code&gt;.
&lt;a href="https://github.com/twitter/util/commit/97f0f0faa8ab1ceb8fca8743d2b4b21d26b5769d"&gt;97f0f0fa&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: &lt;code&gt;c.t.io.Reader.Writable&lt;/code&gt; is now &lt;code&gt;c.t.io.Pipe&lt;/code&gt;. Both &lt;code&gt;Writable&lt;/code&gt; type and
its factory method are deprecated; use &lt;code&gt;new Pipe[A]&lt;/code&gt; instead.  &lt;a href="https://github.com/twitter/util/commit/cbff976029b23dc9c8d7b3b6c497b49e0a6547ad"&gt;cbff9760&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-slf4j-api: Ensure that marker information is used when determining if log
level is enabled for methods which support markers. &lt;a href="https://github.com/twitter/util/commit/02d80820c041009511e40c36e382b9ac5572f698"&gt;02d80820&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-slfj4-api: Finalize the underlying logger def in the Logging trait as it is not
expected that this be overridable. If users wish to change how the underlying logger is
constructed they should simply use the Logger and its methods directly rather than
configuring the the underlying logger of the Logging trait.
Add better Java compatibility for constructing a Logger. &lt;a href="https://github.com/twitter/util/commit/56569b9f4226b65b32d4e3f0079515b6d5542816"&gt;56569b9f&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
