<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Finagle blog</title>
  <id>https://finagle.github.io/blog</id>
  <link href="https://finagle.github.io/blog"/>
  <link href="https://finagle.github.io/blog/blog/feed.xml" rel="self"/>
  <updated>2019-01-18T00:00:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Winter Update ‚ùÑÔ∏è</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2019/01/18/fall-winter/"/>
    <id>https://finagle.github.io/blog/2019/01/18/fall-winter/</id>
    <published>2019-01-18T00:00:00Z</published>
    <updated>2019-01-22T14:25:37-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Winter is in full swing, a new year is upon us, and the &lt;a href="https://twitter.com/davidjrusek/status/1083452863739777024?s=20"&gt;coyotes&lt;/a&gt;
are still doing their thing, and so are all of us here at Twitter. As part of your
new year resolutions please make it a point to check out the
&lt;a href="https://github.com/twitter/finagle/releases/latest"&gt;latest&lt;/a&gt;
releases of our open source offerings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developer experience&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reader, Writer and AsyncStream continue to make progress towards general use streaming use cases. Reader recently gained map and flatMap methods (&lt;a href="https://github.com/twitter/util/commit/ac15ad8bbd633aa5efd5e306d2dea2c40a50379e#diff-aee5b3c34d1f74bb32a0e4502ed6a988"&gt;1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Finagle MySQL gained the ability to pin successive operations to a single session, enabling use cases where connection state is important for correctness.(&lt;a href="https://github.com/twitter/finagle/commit/87b3b781d0ba601d1fd91293741fc264264671f8#diff-d6f8b1cdbafc82ccae487a9b1f76478a"&gt;1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Improved Java Compatibility (
&lt;a href="https://github.com/twitter/finatra/commit/ba224757fba609bbf786ab42d9f3cb8eb81f80e9"&gt;1&lt;/a&gt;,
&lt;a href="https://github.com/twitter/finatra/commit/f6c44cab87d1f9023e6028b76c61ce1920710a7b"&gt;2&lt;/a&gt;,
&lt;a href="https://github.com/twitter/finagle/commit/e57d2a9156d72ada8a81a590714ece676e423ce6"&gt;3&lt;/a&gt;,
&lt;a href="https://github.com/twitter/finagle/commit/30a8000c4a910134219fc1317cead9735ca97cbb"&gt;4&lt;/a&gt;,
&lt;a href="https://github.com/twitter/finagle/commit/cff9aeddc0ae6ceb4c50cb8d67b3418a133d30f9"&gt;5&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Netty&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the works for a while, we all but removed the last vestiges of Netty 3 with the use of Netty 4 cookies.&lt;/li&gt;
&lt;li&gt;Upgraded to 4.1.31.Final (&lt;a href="https://github.com/twitter/finagle/commit/8e0f4b868c34259350fb0def2e7fee5d3d77fece"&gt;1&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Finatra&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Per-method filtering and access to ThriftMux headers are now available in Finatra by switching to a new way of constructing Controllers. Also, Finatra Thrift services now use TypeAgnostic filters instead of the custom ThriftFilters (&lt;a href="https://github.com/twitter/finatra/commit/9d891cd1f6f907c59ad9f40a7db20c4a2b33faf1"&gt;1&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for following along. If you&amp;rsquo;d like to know more about any one of these
updates, or if you have a question about them, join us on the
&lt;a href="https://groups.google.com/forum/#!forum/finaglers"&gt;Finagle&lt;/a&gt; or
&lt;a href="https://groups.google.com/forum/#!forum/finatra-users"&gt;Finatra&lt;/a&gt; mailing lists
or hop on &lt;a href="https://gitter.im/twitter/finagle"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Catch you on the next release,&lt;/p&gt;

&lt;p&gt;Dave and the Core Systems Libraries team&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>January 2019 Release Notes - Version 19.1.0 üéâ</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2019/01/14/release-notes/"/>
    <id>https://finagle.github.io/blog/2019/01/14/release-notes/</id>
    <published>2019-01-14T00:00:00Z</published>
    <updated>2019-01-15T14:42:17-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Happy New Year folks! Hopefully new years resolutions are still on pace. In
the meantime, let&amp;rsquo;s kick off 2019 with a fresh new release of libraries.&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finagle/"&gt;Finagle&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: &lt;code&gt;c.t.f.s.StackBasedServer&lt;/code&gt; has been changed to extend the
&lt;code&gt;c.t.f.Stack.Transformable&lt;/code&gt; trait. This brings &lt;code&gt;StackBasedServer&lt;/code&gt; into parity
with &lt;code&gt;c.t.f.c.StackBasedClient&lt;/code&gt;, which already extends the
&lt;code&gt;Stack.Transformable&lt;/code&gt; trait. &lt;a href="https://github.com/twitter/finagle/commit/9f637b5e41b9ea77129c4a48f4327e3b51787526"&gt;9f637b5e&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: HttpMuxer propagates the close signal to the underlying handlers.
&lt;a href="https://github.com/twitter/finagle/commit/6475680d241f3e9b026b3c3aa6eb94da8c1c37d4"&gt;6475680d&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-stats-core: introduce flag to allow logging metrics on service shutdown.
&lt;a href="https://github.com/twitter/finagle/commit/4588bc1f0a64f3ff6ab1e241bb0726a79f72ca14"&gt;4588bc1f&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The deprecated &lt;code&gt;c.t.f.b.ServerBuilder.stack&lt;/code&gt; method which takes a function
has been removed. Uses of this method should be changed to use the c.t.f.b.ServerBuilder.stack
method which takes a &lt;code&gt;c.t.f.s.StackBasedServer&lt;/code&gt; instead. &lt;a href="https://github.com/twitter/finagle/commit/a05e5e7b69d1b8237d8a6360d00c031172a2db0f"&gt;a05e5e7b&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The type of &lt;code&gt;c.t.f.b.ServerConfig.nilServer&lt;/code&gt; has been changed from
&lt;code&gt;Server\[Req, Rep\]&lt;/code&gt; to &lt;code&gt;StackBasedServer\[Req, Rep\]&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/4be953d433899b0dc4d4a6155283699c8cd8c06d"&gt;4be953d4&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The access level of the &lt;code&gt;c.t.f.b.ServerBuilder.copy&lt;/code&gt; method has changed
from protected to private. &lt;a href="https://github.com/twitter/finagle/commit/4be953d433899b0dc4d4a6155283699c8cd8c06d"&gt;4be953d4&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The bridge type &lt;code&gt;c.t.f.b.Server&lt;/code&gt; has been removed. Users should
change to use &lt;code&gt;c.t.f.ListeningServer&lt;/code&gt; instead. Uses of the previously
deprecated &lt;code&gt;Server.localAddress&lt;/code&gt; should use &lt;code&gt;ListeningServer.boundAddress&lt;/code&gt;
instead. &lt;a href="https://github.com/twitter/finagle/commit/eb66ee71b7054112ab6f4618e3e985d56aaa1f44"&gt;eb66ee71&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The deprecated &lt;code&gt;c.t.f.t.Transport.localAddress&lt;/code&gt; and
&lt;code&gt;c.t.f.t.Transport.remoteAddress&lt;/code&gt; methods are now final and can no longer
be extended. Users should migrate to the respective &lt;code&gt;c.t.f.t.TransportContext&lt;/code&gt;
methods. &lt;a href="https://github.com/twitter/finagle/commit/b85f43a0a80d53766eef22c16c5f7c3497b34e87"&gt;b85f43a0&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift: The &lt;code&gt;c.t.f.t.ThriftRichClient.protocolFactory&lt;/code&gt; and
&lt;code&gt;c.t.f.t.ThriftRichServer.protocolFactory&lt;/code&gt; methods have been removed. Users should
switch to using &lt;code&gt;ThriftRichClient.clientParam.protocolFactory&lt;/code&gt; and
&lt;code&gt;ThriftRichServer.serverParam.protocolFactory&lt;/code&gt; instead. In addition, implementations
of the &lt;code&gt;protocolFactory&lt;/code&gt; method have been removed from the concrete &lt;code&gt;c.t.f.Thrift&lt;/code&gt;
and &lt;code&gt;c.t.f.ThriftMux&lt;/code&gt; client and server. &lt;a href="https://github.com/twitter/finagle/commit/e33baf8210d0acd4f2fab9877acd1ceea287ab40"&gt;e33baf82&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Bug Fixes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Failed writes on Linux due to a remote peer disconnecting should now
be properly seen as a &lt;code&gt;c.t.f.ChannelClosedException&lt;/code&gt; instead of a
&lt;code&gt;c.t.f.UnknownChannelException&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/8f5774cbb8d8342ae5785f1bbeb66f5a07420810"&gt;8f5774cb&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: Compression level of 0 was failing on the server-side when speaking h2c.
Updated so that it can handle a request properly. &lt;a href="https://github.com/twitter/finagle/commit/5f96fcb2b042f641de7db10428981b8bcb2a4e0a"&gt;5f96fcb2&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thriftmux: A Java compatibility issue for users trying to call &lt;code&gt;withOpportunisticTls&lt;/code&gt;
on &lt;code&gt;ThriftMux&lt;/code&gt; clients and servers has been fixed. &lt;a href="https://github.com/twitter/finagle/commit/e57d2a9156d72ada8a81a590714ece676e423ce6"&gt;e57d2a91&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  finagle-core: &lt;code&gt;ServiceFactory.const&lt;/code&gt; propagates the close from the &lt;code&gt;ServiceFactory&lt;/code&gt;
to the underlying service, instead of ignoring it. &lt;a href="https://github.com/twitter/finagle/commit/6475680d241f3e9b026b3c3aa6eb94da8c1c37d4"&gt;6475680d&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finatra/"&gt;Finatra&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Added&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka-streams: SumAggregator and CompositeSumAggregator only support enhanced window
aggregations for the sum operation. Deprecate SumAggregator and CompositeSumAggregator and create
an AggregatorTransformer class that can perform arbitrary aggregations. &lt;a href="https://github.com/twitter/finatra/commit/f588970e04c976b549d1b95dfce8326139d4353e"&gt;f588970e&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-streams: Open-source Finatra Streams. Finatra Streams is an integration
between Kafka Streams and Finatra which we&amp;rsquo;ve been using internally at Twitter
for the last year. The library is not currently open-source.
&lt;a href="https://github.com/twitter/finatra/commit/47cce5462c5831a4bd1952f3c80b72987fda5552"&gt;47cce546&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;inject-server: Add lint rule to alert when deprecated &lt;code&gt;util-logging&lt;/code&gt; JUL flags from the
&lt;code&gt;c.t.inject.server.DeprecatedLogging&lt;/code&gt; trait are user defined. This trait was mixed-in
only for backwards compatibility when TwitterServer was moved to the slf4j-api and the flags are
not expected to be configured. By default, &lt;code&gt;util-app&lt;/code&gt; based applications will fail to start if
they are passed a flag value at startup which they do not define. Users should instead configure
their chosen slf4j-api logging implementation directly. &lt;a href="https://github.com/twitter/finatra/commit/388bf8f9564dd67681640aeefed1e75d6b63b5b9"&gt;388bf8f9&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: &lt;code&gt;c.t.finatra.thrift.Controllers&lt;/code&gt; now support per-method filtering and
access to headers via &lt;code&gt;c.t.scrooge.{Request, Response}&lt;/code&gt; wrappers. To use this new
functionality, create a &lt;code&gt;Controller&lt;/code&gt; which extends the
&lt;code&gt;c.t.finatra.thrift.Controller(SomeThriftService)&lt;/code&gt; abstract class instead of constructing a
&lt;code&gt;Controller&lt;/code&gt; that mixes in the &lt;code&gt;SomeThriftService.BaseServiceIface&lt;/code&gt; trait. With this, you can now
provide implementations in form of &lt;code&gt;c.t.scrooge.Request&lt;/code&gt;/&lt;code&gt;c.t.scrooge.Response&lt;/code&gt; wrappers by calling
the &lt;code&gt;handle(ThriftMethod)&lt;/code&gt; method. Note that a &lt;code&gt;Controller&lt;/code&gt; constructed this way cannot also
extend a &lt;code&gt;BaseServiceIface&lt;/code&gt;.&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;handle(SomeMethod).filtered(someFilter).withFn { req: Request[SomeMethod.Args] =&amp;gt;
  val requestHeaders = req.headers
  // .. implementation here

  // response: Future[Response[SomeMethod.SuccessType]]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that if &lt;code&gt;Request&lt;/code&gt;/&lt;code&gt;Response&lt;/code&gt; based implementations are used the types on any
existing &lt;code&gt;ExceptionMappers&lt;/code&gt; should be adjusted accordingly. Also, if a &lt;code&gt;DarkTrafficFilterModule&lt;/code&gt;
was previously used, it must be swapped out for a &lt;code&gt;ReqRepDarkTrafficFilterModule&lt;/code&gt;
&lt;a href="https://github.com/twitter/finatra/commit/9d891cd1f6f907c59ad9f40a7db20c4a2b33faf1"&gt;9d891cd1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Changed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;inject-core, inject-server: Remove deprecated &lt;code&gt;@Bind&lt;/code&gt; support from test mixins. Users should
instead prefer using the &lt;a href="https://twitter.github.io/finatra/user-guide/testing/bind_dsl.html"&gt;bind[T]&lt;/a&gt;
DSL in tests. &lt;a href="https://github.com/twitter/finatra/commit/841f6974864f84f4940f68a4b4145259b5c81933"&gt;841f6974&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;inject-app: Remove deprecated &lt;code&gt;bind\[T\]&lt;/code&gt; DSL methods from c.t.inject.app.BindDSL.&lt;/p&gt;

&lt;p&gt;Instead of:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;injector.bind[T](instance)
injector.bind[T, Ann](instance)
injector.bind[T](ann, instance)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Users should instead use the more expressive forms of these methods, e.g.,:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;injector.bind[T].toInstance(instance)
injector.bind[T].annotatedWith[Ann].toInstance(instance)
injector.bind[T].annotatedWith(ann).toInstance(instance)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;which more closely mirrors the scala-guice binding DSL. &lt;a href="https://github.com/twitter/finatra/commit/2690003d8a79a520f46972ab05945c9381de0e7a"&gt;2690003d&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: For services that wish to support dark traffic over
&lt;code&gt;c.t.scrooge.Request&lt;/code&gt;/&lt;code&gt;c.t.scrooge.Response&lt;/code&gt;-based services, a new dark traffic module is
available: &lt;code&gt;c.t.finatra.thrift.modules.ReqRepDarkTrafficFilterModule&lt;/code&gt; &lt;a href="https://github.com/twitter/finatra/commit/9d891cd1f6f907c59ad9f40a7db20c4a2b33faf1"&gt;9d891cd1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: Creating a &lt;code&gt;c.t.finatra.thrift.Controller&lt;/code&gt; that extends a
&lt;code&gt;ThriftService.BaseServiceIface&lt;/code&gt; has been deprecated. See the related bullet point in &amp;ldquo;Added&amp;rdquo; with
the corresponding PHAB_ID to this one for how to migrate. &lt;a href="https://github.com/twitter/finatra/commit/9d891cd1f6f907c59ad9f40a7db20c4a2b33faf1"&gt;9d891cd1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;inject-core, inject-server: Remove deprecated &lt;code&gt;WordSpec&lt;/code&gt; testing utilities. The framework
default ScalaTest testing style is &lt;code&gt;FunSuite&lt;/code&gt; though users are free to mix their testing
style of choice with the framework provided test mixins as per the
&lt;a href="https://twitter.github.io/finatra/user-guide/testing/mixins.html"&gt;documentation&lt;/a&gt;.
&lt;a href="https://github.com/twitter/finatra/commit/41767c6ebd19488bf8140bda987ba19055313d31"&gt;41767c6e&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: Instead of failing (potentially silently)
&lt;code&gt;c.t.finatra.thrift.routing.ThriftWarmup&lt;/code&gt; now explicitly checks that it is
using a properly configured &lt;code&gt;c.t.finatra.thrift.routing.Router&lt;/code&gt; &lt;a href="https://github.com/twitter/finatra/commit/e2dc8b300f6dcd4e861b0e4320f1d5cb5316e19a"&gt;e2dc8b30&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-inject: &lt;code&gt;c.t.finatra.inject.server.PortUtils&lt;/code&gt; has been modified to
work with &lt;code&gt;c.t.f.ListeningServer&lt;/code&gt; only. Methods which worked with the
now-removed &lt;code&gt;c.t.f.b.Server&lt;/code&gt; have been modified or removed.
&lt;a href="https://github.com/twitter/finatra/commit/642d7260b5282e3be2fb76ab8182b6504bb1c20d"&gt;642d7260&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-kafka-streams: Finatra Queryable State methods currently require the window size
to be passed into query methods for windowed key value stores. This is unnecessary, as
the queryable state class can be passed the window size at construction time. We also now
save off all FinatraKeyValueStores in a global manager class to allow query services
(e.g. thrift) to access the same KeyValueStore implementation that the FinatraTransformer
is using. &lt;a href="https://github.com/twitter/finatra/commit/c51e174b1869c6abd7dfbd9a5965b2f27a4e5cf9"&gt;c51e174b&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Fixed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  finatra-kafka-streams: Fix bug where KeyValueStore#isOpen was throwing an
exception when called on an uninitialized key value store
&lt;a href="https://github.com/twitter/finatra/commit/d3f833a14ef6efdd521fcd7425fcac210757d620"&gt;d3f833a1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/scrooge/"&gt;Scrooge&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Update asm, cglib, jmock dependencies &lt;a href="https://github.com/twitter/scrooge/commit/688cd29e0a6421dca5e43a081bf5f9d9b8c02039"&gt;688cd29e&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/twitter-server/"&gt;Twitter Server&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Propagate the admin server&amp;rsquo;s shutdown to the handlers that are registered with the admin server.
&lt;a href="https://github.com/twitter/twitter-server/commit/8a164d46d68749310f68b207d8decd7d10986afa"&gt;8a164d46&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/util/"&gt;Util&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  util-core: Added Reader.map/flatMap to transform Reader[A] to Reader[B]. Added &lt;code&gt;fromFuture()&lt;/code&gt;
and &lt;code&gt;value()&lt;/code&gt; in the Reader object to construct a new Reader. &lt;a href="https://github.com/twitter/util/commit/ac15ad8bbd633aa5efd5e306d2dea2c40a50379e"&gt;ac15ad8b&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;util-core: The implicit conversions classes in &lt;code&gt;c.t.conversions.SomethingOps&lt;/code&gt; have been
renamed to have unique names. This allows them to be used together with wildcard imports.
See Github issue (&lt;a href="https://github.com/twitter/util/issues/239"&gt;https://github.com/twitter/util/issues/239&lt;/a&gt;). &lt;a href="https://github.com/twitter/util/commit/2d5d6da989ab83e8701b9f57ae0708a5851beb07"&gt;2d5d6da9&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Both &lt;code&gt;c.t.io.Writer.FailingWriter&lt;/code&gt; and &lt;code&gt;c.t.io.Writer.fail&lt;/code&gt; were removed. Build your
own instance should you need to. &lt;a href="https://github.com/twitter/util/commit/63815225ef894029bf107c1c2b4e17182e515994"&gt;63815225&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>December 2018 Release Notes - Version 18.12.0 üß§</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2018/12/18/release-notes/"/>
    <id>https://finagle.github.io/blog/2018/12/18/release-notes/</id>
    <published>2018-12-18T00:00:00Z</published>
    <updated>2019-01-15T14:42:17-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;It&amp;rsquo;s hot chocolate season in the big apple.  That means mittens, ice-skating,
and curling up by the radiator.  Grab your puffer, it&amp;rsquo;s the most beautiful time
of the year.&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finagle/"&gt;Finagle&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-redis: Add support for the new stream API released in Redis 5.0. &lt;a href="https://github.com/twitter/finagle/commit/ba578c1445b2e241687ad3c89eec4f3d93431a76"&gt;ba578c14&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Add Java compatibility for &lt;code&gt;c.t.f.Filter.TypeAgnostic.Identity&lt;/code&gt;
via &lt;code&gt;c.t.f.Filter.typeAgnosticIdentity()&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/cff9aeddc0ae6ceb4c50cb8d67b3418a133d30f9"&gt;cff9aedd&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Add Java compatibility for &lt;code&gt;c.t.f.Name&lt;/code&gt; through &lt;code&gt;Names&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finagle/commit/30a8000c4a910134219fc1317cead9735ca97cbb"&gt;30a8000c&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Introduce a &lt;code&gt;StackServer.withStack&lt;/code&gt; overload that
makes modifying the existing &lt;code&gt;Stack&lt;/code&gt; easier when using method chaining.
&lt;a href="https://github.com/twitter/finagle/commit/f1a980cfdb780963d1e4e146d9031a93b43b107d"&gt;f1a980cf&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-stats: Split the implementation and &lt;code&gt;ServiceLoading&lt;/code&gt; into separate modules.
The implementation is in &lt;code&gt;finagle-stats-core&lt;/code&gt;. This is backwards compatible
for existing users of &lt;code&gt;finagle-stats&lt;/code&gt; while allowing new usages built on top.
&lt;a href="https://github.com/twitter/finagle/commit/b9fe5c8d41e7246e0dda31e9c178ae0d7d09c571"&gt;b9fe5c8d&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift: Add &lt;code&gt;c.t.finagle.thrift.MethodMetadata&lt;/code&gt; which provides a &lt;code&gt;LocalContext&lt;/code&gt; Key
for setting information about the current Thrift method and an accessor for retrieving
the currently set value. &lt;a href="https://github.com/twitter/finagle/commit/7b22e4efb5efd14296f2a080b1eb2ccab38db804"&gt;7b22e4ef&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-thrift: Update &lt;code&gt;c.t.finagle.thrift.MethodMetadata&lt;/code&gt; to provide an
&lt;code&gt;asCurrent&lt;/code&gt; method to set the current &lt;code&gt;c.t.finagle.thrift.MethodMetadata&lt;/code&gt; in the
&lt;code&gt;LocalContext&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/f46e1f771477102c93f4f82a54d0d1292a4dffba"&gt;f46e1f77&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The &lt;code&gt;c.t.u.Closable&lt;/code&gt; trait has been removed from
&lt;code&gt;c.t.f.t.TransportContext&lt;/code&gt;, as well as the &lt;code&gt;close&lt;/code&gt; and &lt;code&gt;onclose&lt;/code&gt; methods. Uses of
these methods within &lt;code&gt;TransportContext&lt;/code&gt; should be changed to use the corresponding
methods on &lt;code&gt;c.t.f.t.Transport&lt;/code&gt; instead. &lt;a href="https://github.com/twitter/finagle/commit/b8b850bb9e37449854f4c983bbc8f821987cdb59"&gt;b8b850bb&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The deprecated &lt;code&gt;c.t.f.t.Transport.peerCertificate&lt;/code&gt; method on the &lt;code&gt;Transport&lt;/code&gt; class
(not the &lt;code&gt;Transport.peerCertificate&lt;/code&gt; Finagle context) has been removed. Uses of this
method should be changed to use &lt;code&gt;c.t.f.t.TransportContext.peerCertificate&lt;/code&gt; instead.
&lt;a href="https://github.com/twitter/finagle/commit/ab0432b4a56f993802c68af9b3633f0b461ec97a"&gt;ab0432b4&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: The deprecated &lt;code&gt;c.t.f.t.TransportContext.status&lt;/code&gt; method has been removed
from &lt;code&gt;TransportContext&lt;/code&gt;. Uses of this method should be changed to use
&lt;code&gt;c.t.f.t.Transport.status&lt;/code&gt; instead. &lt;a href="https://github.com/twitter/finagle/commit/fd97536f63a3f72c868fa4ae5e17772b21ccfc14"&gt;fd97536f&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-mysql: &lt;code&gt;c.t.f.m.Charset&lt;/code&gt; has been renamed to &lt;code&gt;c.t.f.m.MysqlCharset&lt;/code&gt; to resolve
any ambiguity between it and the &lt;code&gt;Charset&lt;/code&gt; &lt;code&gt;Stack&lt;/code&gt; parameter. &lt;a href="https://github.com/twitter/finagle/commit/05354cd55a2307d51b9cec24bd747786cd6db068"&gt;05354cd5&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-mysql: All &lt;code&gt;Stack&lt;/code&gt; params (&lt;code&gt;Charset&lt;/code&gt;, &lt;code&gt;Credentials&lt;/code&gt;, &lt;code&gt;Database&lt;/code&gt;, &lt;code&gt;FoundRows&lt;/code&gt;,
&lt;code&gt;MaxConcurrentPrepareStatements&lt;/code&gt;, &lt;code&gt;UnsignedColumns&lt;/code&gt;) have been moved to the
&lt;code&gt;com.twitter.finagle.mysql.param&lt;/code&gt; namespace. &lt;a href="https://github.com/twitter/finagle/commit/d30c5549500e9e6876647a9365823ceae1cddd0b"&gt;d30c5549&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-mysql: The deprecated &lt;code&gt;c.t.f.m.Client.apply(factory, statsReceiver)&lt;/code&gt; method
has been removed. &lt;a href="https://github.com/twitter/finagle/commit/17747e1a969ee5a39c45852ca3d5486cb9600c10"&gt;17747e1a&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-mysql: The &lt;code&gt;c.t.f.m.Handshake&lt;/code&gt; class and companion object have been made
private. &lt;a href="https://github.com/twitter/finagle/commit/20c8d50f248d8ef3f32c5dc3140f37c69ec726dc"&gt;20c8d50f&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: Rename the toggle &amp;lsquo;c.t.f.h.UseH2CClients&amp;rsquo; to &amp;lsquo;c.t.f.h.UseH2CClients2&amp;rsquo;.
&lt;a href="https://github.com/twitter/finagle/commit/43c0b69c04be6ea31e5eaf6feb0fd9bbd1856f77"&gt;43c0b69c&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle: Upgrade to Netty 4.1.31.Final and netty-tcnative 2.0.19.Final. &lt;a href="https://github.com/twitter/finagle/commit/8e0f4b868c34259350fb0def2e7fee5d3d77fece"&gt;8e0f4b86&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-base-http: The &lt;code&gt;DefaultHeaderMap&lt;/code&gt; will replace &lt;code&gt;obs-fold&lt;/code&gt; ( CRLF 1*(SP/HTAB) ) in
inserted header values. &lt;a href="https://github.com/twitter/finagle/commit/51c4f789f106a8ca433956b72a6d478c2189f5f0"&gt;51c4f789&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finatra/"&gt;Finatra&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Added&lt;/h4&gt;

&lt;h4&gt;Changed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: Instead of failing (potentially silently)
&lt;code&gt;c.t.finatra.thrift.routing.ThriftWarmup&lt;/code&gt; now explicitly checks that it is
using a properly configured &lt;code&gt;c.t.finatra.thrift.routing.Router&lt;/code&gt; &lt;a href="https://github.com/twitter/finatra/commit/e2dc8b300f6dcd4e861b0e4320f1d5cb5316e19a"&gt;e2dc8b30&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: &lt;code&gt;c.t.finatra.thrift.Controller&lt;/code&gt; is now an abstract class
rather than a trait. &lt;a href="https://github.com/twitter/finatra/commit/09c9bbb13d19a25478c34b7e0a02883ebe26be0a"&gt;09c9bbb1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: &lt;code&gt;c.t.finatra.thrift.internal.ThriftMethodService&lt;/code&gt; is now
private. &lt;a href="https://github.com/twitter/finatra/commit/53dc05016196743cffcc7235b1625378468ee584"&gt;53dc0501&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: &lt;code&gt;c.t.finatra.thrift.exceptions.FinatraThriftExceptionMapper&lt;/code&gt; and
&lt;code&gt;c.t.finatra.thrift.exceptions.FinatraJavaThriftExceptionMapper&lt;/code&gt; now extend
&lt;code&gt;ExceptionManager[Throwable, Nothing]&lt;/code&gt; since the return type was never used. They are
now also final. &lt;a href="https://github.com/twitter/finatra/commit/dc894547390a1130414a15594f55b3828a05ffed"&gt;dc894547&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: Remove &lt;code&gt;c.t.finatra.thrift.routing.JavaThriftRouter#beforeFilter&lt;/code&gt;. This method
adds too much confusion to the Router API and users are encouraged to instead apply their
TypeAgnostic Filters directly to the resultant &lt;code&gt;Service[-R, +R]&lt;/code&gt;  by overriding the
&lt;code&gt;c.t.finatra.thrift.AbstractThriftServer#configureService&lt;/code&gt; method instead. &lt;a href="https://github.com/twitter/finatra/commit/b0cb8eaf7107c72ccb221aea588f06af20ed40d9"&gt;b0cb8eaf&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: &lt;code&gt;c.t.finagle.Filter.TypeAgnostic&lt;/code&gt; filters are now the standard type of filter
that can be added by configuring a &lt;code&gt;ThriftRouter&lt;/code&gt;. &lt;code&gt;c.t.finatra.thrift.ThriftFilter&lt;/code&gt; has been
deprecated. &lt;a href="https://github.com/twitter/finatra/commit/6e93b9cc415ed25e374a4207a84328a59036bcd9"&gt;6e93b9cc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: &lt;code&gt;c.t.finatra.thrift.ThriftRequest&lt;/code&gt; has been deprecated. All of the information
contained in a ThriftRequest can be found in other ways:
&lt;code&gt;methodName&lt;/code&gt; -&amp;gt; &lt;code&gt;Method.current.get.name&lt;/code&gt;
&lt;code&gt;traceId&lt;/code&gt;    -&amp;gt; &lt;code&gt;Trace.id&lt;/code&gt;
&lt;code&gt;clientId&lt;/code&gt;   -&amp;gt; &lt;code&gt;ClientId.current&lt;/code&gt;
&lt;a href="https://github.com/twitter/finatra/commit/6e93b9cc415ed25e374a4207a84328a59036bcd9"&gt;6e93b9cc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Fixed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;finatra-http: Validate headers to prevent header injection vulnerability. &lt;a href="https://github.com/twitter/finatra/commit/8a9250002d2d0676b3ff82ceaa9c5260772d7c0c"&gt;8a925000&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Closed&lt;/h4&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/scrooge/"&gt;Scrooge&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;scrooge-generator: Set a &lt;code&gt;LocalContext&lt;/code&gt; value with the current Thrift method in the
generated Java and Scala code such that the application &lt;code&gt;Service[-R, +R]&lt;/code&gt; being executed has
access to information about the current Thrift method being invoked. &lt;a href="https://github.com/twitter/scrooge/commit/09da33978159fc4f0ac95848adee3b09ae64326b"&gt;09da3397&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/twitter-server/"&gt;Twitter Server&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;No Changes&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/util/"&gt;Util&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;util-core: Provide a way to listen for stream termination to &lt;code&gt;c.t.util.Reader&lt;/code&gt;, &lt;code&gt;Reader#onClose&lt;/code&gt;
which is satisfied when the stream is discarded or read until the end. &lt;a href="https://github.com/twitter/util/commit/3b1434e2b59a4f8df89c408ed442abb738e3a6a6"&gt;3b1434e2&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Conversions in &lt;code&gt;c.t.conversions&lt;/code&gt; have new implementations
that follow a naming scheme of &lt;code&gt;SomethingOps&lt;/code&gt;. Where possible the implementations
are &lt;code&gt;AnyVal&lt;/code&gt; based avoiding allocations for the common usage pattern.
&lt;a href="https://github.com/twitter/util/commit/ee56e5f2418d5d6540d37268436ff6f47520edaf"&gt;ee56e5f2&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;percent&lt;/code&gt; is now &lt;code&gt;PercentOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt; is now &lt;code&gt;StorageUnitOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string&lt;/code&gt; is now &lt;code&gt;StringOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread&lt;/code&gt; is now &lt;code&gt;ThreadOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;time&lt;/code&gt; is now &lt;code&gt;DurationOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;u64&lt;/code&gt; is now &lt;code&gt;U64Ops&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Bug Fixes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;util-core: Fixed a bug where tail would sometimes return Some empty AsyncStream instead of None.
&lt;a href="https://github.com/twitter/util/commit/1dc614bc7adf236ffe1e92b45fac35ea3241f6b0"&gt;1dc614bc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Deprecations&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;util-core: Conversions in &lt;code&gt;c.t.conversions&lt;/code&gt; have been deprecated in favor of &lt;code&gt;SomethingOps&lt;/code&gt;
versions. Where possible the implementations are &lt;code&gt;AnyVal&lt;/code&gt; based and use implicit classes
instead of implicit conversions. &lt;a href="https://github.com/twitter/util/commit/ee56e5f2418d5d6540d37268436ff6f47520edaf"&gt;ee56e5f2&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;percent&lt;/code&gt; is now &lt;code&gt;PercentOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;storage&lt;/code&gt; is now &lt;code&gt;StorageUnitOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string&lt;/code&gt; is now &lt;code&gt;StringOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;thread&lt;/code&gt; is now &lt;code&gt;ThreadOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;time&lt;/code&gt; is now &lt;code&gt;DurationOps&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;u64&lt;/code&gt; is now &lt;code&gt;U64Ops&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;util-core: Experimental &lt;code&gt;c.t.io.exp.MinThroughput&lt;/code&gt; utilities were removed.  &lt;a href="https://github.com/twitter/util/commit/d9c5e4a3fbb383114bc5aad73754ed9fef6f4dd2"&gt;d9c5e4a3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Deleted &lt;code&gt;c.t.io.Reader.Null&lt;/code&gt;, which was incompatible with &lt;code&gt;Reader#onClose&lt;/code&gt; semantics.
&lt;code&gt;c.t.io.Reader#empty[Nothing]&lt;/code&gt; is a drop-in replacement. &lt;a href="https://github.com/twitter/util/commit/3b1434e2b59a4f8df89c408ed442abb738e3a6a6"&gt;3b1434e2&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Removed &lt;code&gt;c.t.util.U64&lt;/code&gt; bits. Use &lt;code&gt;c.t.converters.u64._&lt;/code&gt; instead.  &lt;a href="https://github.com/twitter/util/commit/8034e5577c953c2b99836865cd9cf6da652aea71"&gt;8034e557&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>November 2018 Release Notes - Version 18.11.0 ‚ùÑÔ∏è</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2018/11/13/release-notes/"/>
    <id>https://finagle.github.io/blog/2018/11/13/release-notes/</id>
    <published>2018-11-13T00:00:00Z</published>
    <updated>2019-01-15T14:42:17-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Halloween has come and gone and it&amp;rsquo;s already snowing here in the Rockies. Time to cuddle up with a warm compiler and check out the new edition of Twitter&amp;rsquo;s open source libraries!&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finagle/"&gt;Finagle&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-base-http: Add &lt;code&gt;Message.httpDateFormat(millis)&lt;/code&gt; to format the epoch millis into
an RFC 7231 formatted String representation. &lt;a href="https://github.com/twitter/finagle/commit/eb9bec0ec83792a1bfb1e1fc94ecd214efdf0c48"&gt;eb9bec0e&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-core: Introduce an &lt;code&gt;StackClient.withStack&lt;/code&gt; overload that
makes modifying the existing &lt;code&gt;Stack&lt;/code&gt; easier when using method chaining.
&lt;a href="https://github.com/twitter/finagle/commit/8f69e83366c7e275fbe1cbf7671f04e0e3daab70"&gt;8f69e833&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-mysql: Introduce &lt;code&gt;session&lt;/code&gt; to be able to perform multiple operations that require
session state on a guaranteed single connection. &lt;a href="https://github.com/twitter/finagle/commit/a06f7d672dce4b9e131356634f18e168e68f3692"&gt;a06f7d67&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-netty4: When using the native epoll transport, finagle now publishes the TCP window size
and number of retransmits based on the &lt;code&gt;tcpInfo&lt;/code&gt; provided by from the channel.  These stats are
published with a debug verbosity level.  &lt;a href="https://github.com/twitter/finagle/commit/160710883174e35d01f8460a80c4ad616653961a"&gt;16071088&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: HTTP clients and servers now accept &lt;code&gt;fixedLengthStreamedAfter&lt;/code&gt; param in their
&lt;code&gt;withStreaming&lt;/code&gt; configuration (default: 5 MB when streaming is enabled). This new parameter
controls the limit after which Finagle will stop aggregating messages with known &lt;code&gt;Content-Length&lt;/code&gt;
(payload will be available at &lt;code&gt;.content&lt;/code&gt;) and switch into a streaming mode (payload will be
available at &lt;code&gt;.reader&lt;/code&gt;). Note messages with &lt;code&gt;Transfer-Encoding: chunked&lt;/code&gt; never aggregated.
&lt;a href="https://github.com/twitter/finagle/commit/842e5e1a2b5613307add41fd064ebb589cc22bef"&gt;842e5e1a&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-http: &lt;code&gt;c.t.f.http.param.MaxChunkSize&lt;/code&gt; has been removed. There is no good reason to
configure it with anything but &lt;code&gt;Int.MaxValue&lt;/code&gt; (unlimited). &lt;a href="https://github.com/twitter/finagle/commit/990c8650366e5374ea062c753a4628c5971fc40e"&gt;990c8650&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-exp: Update &lt;code&gt;DarkTrafficFilter#handleFailedInvocation&lt;/code&gt; to accept the request type
for more fidelity in handling the failure. &lt;a href="https://github.com/twitter/finagle/commit/b247f941e97fe5c3bcf667ae69c27128f3cf1c52"&gt;b247f941&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finagle-http: Unset &lt;code&gt;maxChunkSize&lt;/code&gt; limit in Netty HTTP codecs. Now both clients and servers
emit all available data as a single chunk so we can put it into use quicker.
&lt;a href="https://github.com/twitter/finagle/commit/990c8650366e5374ea062c753a4628c5971fc40e"&gt;990c8650&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http: Streaming clients (&lt;code&gt;withStreaming(true)&lt;/code&gt;) now aggregate inbound messages with known
&lt;code&gt;Content-Length&lt;/code&gt; if their payloads are less than 5mb (8k before). Use &lt;code&gt;withStreaming(true, 32.kb)&lt;/code&gt;
to override it with a different value. &lt;a href="https://github.com/twitter/finagle/commit/24271b29e5030230e16d9b628de1a7ab029e99e5"&gt;24271b29&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finagle-http2: HTTP/2 servers perform a more graceful shutdown where an initial
GOAWAY is sent with the maximum possible stream id and waits for either the client
to hang up or for the close deadline, at which time a second GOAWAY is sent with
the true last processed stream and the connection is then closed.
&lt;a href="https://github.com/twitter/finagle/commit/93fee4994e3ac83078a4342be5d8a31f921a094f"&gt;93fee499&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Deprecations&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;finagle-core: Deprecate
&lt;code&gt;EndpointerStackClient.transformed(Stack[ServiceFactory[Req, Rep]] =&amp;gt; Stack[ServiceFactory[Req, Rep]])&lt;/code&gt;
in favor of the &lt;code&gt;withStack&lt;/code&gt; variant. &lt;a href="https://github.com/twitter/finagle/commit/8f69e83366c7e275fbe1cbf7671f04e0e3daab70"&gt;8f69e833&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finatra/"&gt;Finatra&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Changed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: Fixes and improvements for better Java support. ExceptionMappingFilter now
works properly with generated Java controllers, added an exception mapper for the exceptions
defined in &lt;code&gt;finatra_thrift_exceptions.thrift&lt;/code&gt; which works on the geneated Java code for these
exceptions. Better Java API separation to make usage less error prone and confusing.
&lt;a href="https://github.com/twitter/finatra/commit/f6c44cab87d1f9023e6028b76c61ce1920710a7b"&gt;f6c44cab&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: (BREAKING API CHANGE) Update &lt;code&gt;DarkTrafficFilter#handleFailedInvocation&lt;/code&gt; to accept
the request type for more fidelity in handling the failure. &lt;a href="https://github.com/twitter/finatra/commit/20bd33acdb443545d65a68fec2032c764564a2d4"&gt;20bd33ac&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-http: Move &lt;code&gt;request.ContentType&lt;/code&gt; and &lt;code&gt;response.Mustache&lt;/code&gt; Java annotations to
&lt;code&gt;com.twitter.finatra.http&lt;/code&gt; package namespace. &lt;a href="https://github.com/twitter/finatra/commit/ef13561030cb38d56c15c6030974eda0e1131c40"&gt;ef135610&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-jackson: Move away from deprecated code and update error handling and exceptions post
Jackson 2.9.x upgrade. &lt;a href="https://github.com/twitter/finatra/commit/f1e5c96ebc6b6baaf244df382f764ae028b5abd3"&gt;f1e5c96e&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;inject-core: (BREAKING API CHANGE) Remove &lt;code&gt;c.t.inject.TestMixin#sleep&lt;/code&gt;. We do not want to
promote this usage of Thread blocking in testing utilities. Add a new testing function:
&lt;code&gt;c.t.inject.TestMixin#await&lt;/code&gt; which will perform &lt;code&gt;Await.result&lt;/code&gt; on a given &lt;code&gt;c.t.util.Awaitable&lt;/code&gt;.
This function was duplicated across tests in the codebase. We also introduce an overridable default
timeout on the underlying &lt;code&gt;Await.result&lt;/code&gt; call: &lt;code&gt;c.t.inject.TestMixin#defaultAwaitTimeout&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finatra/commit/4aee1051fd3656486e0c7c2d910cf90c2179871a"&gt;4aee1051&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Fixed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;finatra-http: Fix registration of HTTP Routes in the Library registry to properly account
for Routes that duplicate a URI with a different HTTP verb. That is, a Route should be considered
unique per URI + HTTP verb combination. &lt;a href="https://github.com/twitter/finatra/commit/6a7150759e7ccb9ae9c77269223bda182bb19d13"&gt;6a715075&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/scrooge/"&gt;Scrooge&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;scrooge-generator: Allow for &lt;code&gt;Filter.TypeAgnostic&lt;/code&gt; filters to be applied to a generated
Java &lt;code&gt;Service&lt;/code&gt; via a new constructor that takes an additional argument of a &lt;code&gt;Filter.TypeAgnostic&lt;/code&gt;.
This filter is then applied per generated method service. &lt;a href="https://github.com/twitter/scrooge/commit/19c7d58b907006e3403fdc9828abe55cb843c276"&gt;19c7d58b&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/twitter-server/"&gt;Twitter Server&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;No Changes&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/util/"&gt;Util&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;util-core: &lt;code&gt;c.t.u.Future.raiseWithin&lt;/code&gt; methods now take the timeout exception as a call-by-name
parameter instead of a strict exception. While Scala programs should compile as usual, Java
users will need to use a &lt;code&gt;scala.Function0&lt;/code&gt; as the second parameter. The helper
&lt;code&gt;c.t.u.Function.func0&lt;/code&gt; can be helpful. &lt;a href="https://github.com/twitter/util/commit/9bde57caffa7e127967fb2452beab3d09fd9888e"&gt;9bde57ca&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Rename &lt;code&gt;c.t.io.Reader.ReaderDiscarded&lt;/code&gt; to &lt;code&gt;c.t.io.ReaderDiscardedException&lt;/code&gt;.
&lt;a href="https://github.com/twitter/util/commit/a970c5b5ddf9cb66a63693aa5cf7709d177a234a"&gt;a970c5b5&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;util-core: Made Stopwatch.timeNanos monotone. &lt;a href="https://github.com/twitter/util/commit/8d35b496756172e9bb29c473d77e32f6414806e6"&gt;8d35b496&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>October 2018 Release Notes ‚Äî Version 18.10.0</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2018/10/24/release-notes/"/>
    <id>https://finagle.github.io/blog/2018/10/24/release-notes/</id>
    <published>2018-10-24T00:00:00Z</published>
    <updated>2018-11-13T10:01:57-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Here we are in the month of October, just a few weeks until creatures of
fantasy roam the streets together with people dressed up as creatures of
fantasy üëπ.&lt;/p&gt;

&lt;p&gt;Speaking of the fantastic, we have new releases!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/twitter/finagle/releases/tag/finagle-18.10.0"&gt;Finagle 18.10.0&lt;/a&gt;,
&lt;a href="https://github.com/twitter/finatra/releases/tag/finatra-18.10.0"&gt;Finatra 18.10.0&lt;/a&gt;,
&lt;a href="https://github.com/twitter/scrooge/releases/tag/scrooge-18.10.0"&gt;Scrooge 18.10.0&lt;/a&gt;,
&lt;a href="https://github.com/twitter/twitter-server/releases/tag/twitter-server-18.10.0"&gt;TwitterServer 18.10.0&lt;/a&gt;,
and &lt;a href="https://github.com/twitter/util/releases/tag/util-18.10.0"&gt;Util 18.10.0&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finagle/"&gt;Finagle&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Deprecations&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;finagle-core: Deprecation warnings have been removed from the &amp;lsquo;status&amp;rsquo;, &amp;lsquo;onClose&amp;rsquo;,
and &amp;lsquo;close&amp;rsquo; methods on &lt;code&gt;c.t.f.t.Transport&lt;/code&gt;, and added to the corresponding methods
on &lt;code&gt;c.t.f.t.TransportContext&lt;/code&gt;. &lt;a href="https://github.com/twitter/finagle/commit/9ae6d978c9b0c77309e7d199f6f71c6cc5d58586"&gt;9ae6d978&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;finagle-netty3: Implementations for &amp;lsquo;status&amp;rsquo;, &amp;lsquo;onClose&amp;rsquo;, and &amp;lsquo;close&amp;rsquo; methods have
been moved from &lt;code&gt;c.t.f.n.t.ChannelTransportContext&lt;/code&gt; to &lt;code&gt;c.t.f.n.t.ChannelTransport&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finagle/commit/9ae6d978c9b0c77309e7d199f6f71c6cc5d58586"&gt;9ae6d978&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/finatra/"&gt;Finatra&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Fixed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;finatra-thrift: Set the bound &lt;code&gt;StatsReceiver&lt;/code&gt; in the underlying Finagle &lt;code&gt;ThriftMux&lt;/code&gt; server
in the &lt;code&gt;c.t.finatra.thrift.ThriftServer&lt;/code&gt;. This prevented testing of underlying Finagle server
stats as the &lt;code&gt;InMemoryStatsReceiver&lt;/code&gt; used by the &lt;code&gt;EmbeddedThriftServer&lt;/code&gt; was not properly passed
all the way through the stack. &lt;a href="https://github.com/twitter/finatra/commit/33d0524b76f943c5661c0b21ff0d38c1d6563202"&gt;33d0524b&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Changed&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;finatra-http, finatra-thrift: Make HTTP and Thrift StatsFitlers &amp;ldquo;Response Classification&amp;rdquo;
aware. &lt;a href="https://github.com/twitter/finatra/commit/4085d40cb7cb607101564bbc488f9a1daea56dff"&gt;4085d40c&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-http, finatra-thrift: (BREAKING API CHANGE) Update the &lt;code&gt;DarkTrafficFilterModule&lt;/code&gt; in
both HTTP and Thrift to allow for specifying further configuration of the underlying Finagle client.
This allows users the ability to set Finagle client concerns like ResponseClassification or other
configuration not expressed by the DarkTrafficFilterModule&amp;rsquo;s API.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Additionally, the Thrift &lt;code&gt;DarkTrafficFilterModule&lt;/code&gt; has been updated to be ThriftMux only. For more information on mux see: &lt;a href="https://twitter.github.io/finagle/guide/FAQ.html?highlight=thriftmux#what-is-thriftmux"&gt;What is ThriftMux&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;We also update the &lt;code&gt;enableSampling&lt;/code&gt; method to accept a &lt;code&gt;c.t.inject.Injector&lt;/code&gt; to aid in the decision-making for if a given request should be &amp;ldquo;sampled&amp;rdquo; by the filter. &lt;a href="https://github.com/twitter/finatra/commit/d74868430cf6b0da2051b3ff0f2d1e47e6c0c169"&gt;d7486843&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: (BREAKING API CHANGE) Update &lt;code&gt;c.t.finatra.thrift.routing.ThriftRouter&lt;/code&gt; API for
adding Java Thrift controllers. The &lt;code&gt;service: Class[_]&lt;/code&gt; was rendered unnecessary some time ago
but not removed from the API signature. Because this parameter is useless and it shadows
another variable inside of the code we remove it from the signature altogether rather than
deprecating the API. &lt;a href="https://github.com/twitter/finatra/commit/c2378cc7b61bce18afa65ff5b76175dfaecd7b13"&gt;c2378cc7&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;finatra-thrift: Rename &lt;code&gt;defaultFinatraThriftPort&lt;/code&gt; to &lt;code&gt;defaultThriftPort&lt;/code&gt;.
&lt;a href="https://github.com/twitter/finatra/commit/5910fd2358ad0e9e9c8ee1c25b549afabfee199f"&gt;5910fd23&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/scrooge/"&gt;Scrooge&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;scrooge: Add type annotations to public members in generated code.
&lt;a href="https://github.com/twitter/scrooge/commit/5cad10055fb9fa45f7b2659bf5830745e9fc472b"&gt;5cad1005&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/twitter-server/"&gt;Twitter Server&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Deprecate &lt;code&gt;c.t.server.AdminHttpServer#routes&lt;/code&gt;. Routes should be added to the &lt;code&gt;AdminHttpServer&lt;/code&gt;
via &lt;code&gt;c.t.server.AdminHttpServer#addAdminRoutes&lt;/code&gt;. &lt;a href="https://github.com/twitter/twitter-server/commit/4078e4cb39812f1085bd38fdcaca2de35f2dffc7"&gt;4078e4cb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Update &lt;code&gt;BuildProperties&lt;/code&gt; to not emit a warning when no &lt;code&gt;build.properties&lt;/code&gt; file can be
located. &lt;a href="https://github.com/twitter/twitter-server/commit/7ce6e4cbcaf3ac9d9dccd62a5aaf9c9572cf5788"&gt;7ce6e4cb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/twitter/util/"&gt;Util&lt;/a&gt;&lt;/h3&gt;

&lt;h4&gt;Breaking API Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;util-core: &lt;code&gt;c.t.io.Reader.Writable&lt;/code&gt; and &lt;code&gt;c.t.Reader.writable()&lt;/code&gt; are removed. Use &lt;code&gt;c.t.io.Pipe&lt;/code&gt;
instead. &lt;a href="https://github.com/twitter/util/commit/5ef6a0dca89dad4488ce33cd1ea5a2f8eab1bb7a"&gt;5ef6a0dc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: &lt;code&gt;c.t.util.TempFolder&lt;/code&gt; has been moved to &lt;code&gt;c.t.io.TempFolder&lt;/code&gt;. &lt;a href="https://github.com/twitter/util/commit/2f8ee9048431a7cdf10333390b0eb2e1c2df08cd"&gt;2f8ee904&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: Removed the forwarding types &lt;code&gt;c.t.util.TimeConversions&lt;/code&gt; and
&lt;code&gt;c.t.util.StorageUnitConversions&lt;/code&gt;. Use &lt;code&gt;c.t.conversions.time&lt;/code&gt; and
&lt;code&gt;c.t.conversions.storage&lt;/code&gt; directly. &lt;a href="https://github.com/twitter/util/commit/0c83ebc0ae1d6d62fabf80a48bca501c6457440f"&gt;0c83ebc0&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;util-core: &lt;code&gt;c.t.concurrent.AsyncStream.fromReader&lt;/code&gt; has been moved to
&lt;code&gt;c.t.io.Reader.toAsyncStream&lt;/code&gt;. &lt;a href="https://github.com/twitter/util/commit/6c3be47d69bf628a9b87146309e2e02844a2d25b"&gt;6c3be47d&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;New Features&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;util-core: &lt;code&gt;c.t.io.Reader.fromBuf&lt;/code&gt; (&lt;code&gt;BufReader&lt;/code&gt;), &lt;code&gt;c.t.io.Reader.fromFile&lt;/code&gt;,
&lt;code&gt;c.t.io.Reader.fromInputStream&lt;/code&gt; (&lt;code&gt;InputStreamReader&lt;/code&gt;) now take an additional parameter,
&lt;code&gt;chunkSize&lt;/code&gt;, the upper bound of the number of bytes that a given reader emits at each read.
&lt;a href="https://github.com/twitter/util/commit/719f41a65b723c21d03348d02989c93e293beb42"&gt;719f41a6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Runtime Behavior Changes&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;util-core: &lt;code&gt;c.t.u.Duration.inTimeUnit&lt;/code&gt; can now return
&lt;code&gt;j.u.c.TimeUnit.MINUTES&lt;/code&gt;. &lt;a href="https://github.com/twitter/util/commit/0daac8d785b02bc819b1464c695f17a28ffb3384"&gt;0daac8d7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Fall Update üçÇ</title>
    <link rel="alternate" href="https://finagle.github.io/blog/2018/10/18/fall-review/"/>
    <id>https://finagle.github.io/blog/2018/10/18/fall-review/</id>
    <published>2018-10-18T00:00:00Z</published>
    <updated>2018-11-13T10:01:57-07:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Fall is here! If you live in Boulder, you might take a üö∂and &lt;a href="https://twitter.com/davidjrusek/status/1050100034157637632"&gt;watch coyotes
hunt prairie dogs&lt;/a&gt;.
The new season brings about a change of clothes, but what about a change of
code? Upgrade to the &lt;a href="https://github.com/twitter/finagle/releases/latest"&gt;latest Finagle
version&lt;/a&gt; and enjoy the new
features, APIs, and bug fixes! Here&amp;rsquo;s a breakdown of what&amp;rsquo;s new.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developer experience&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We continue evolving Reader/Writer APIs to make them more friendly for
application-level development. This part is nearly done and our next step is
to adopt said APIs in both Finagle and Finatra, providing their users with a
seamless developer experience. (&lt;a href="https://github.com/twitter/finagle/commit/5242d49d8e6aa9041626311ae66405b2634136b2"&gt;1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Tunables are now observable via Vars. (&lt;a href="https://github.com/twitter/util/commit/94864832a593f5f75c696c8dab913ceba69e81dc"&gt;1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Lots of examples of how to use Future. (&lt;a href="https://github.com/twitter/util/commit/3e9d68fadfc8c0d008242245e06715491b46575b"&gt;1&lt;/a&gt;, &lt;a href="https://github.com/twitter/util/commit/6b41ef4711ede2dc1590725f6042da68f33fac5d"&gt;2&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;HTTP2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;MANY performance improvements. We no longer consider h2c
experimental! This will be on by default in the next few months.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resiliency&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Thrift and ThriftMux servers now feature Response Classification to better
indicate their success rate.&lt;/li&gt;
&lt;li&gt;New and improved Tracing. This work dramatically reduces the number of
context lookups. (&lt;a href="https://github.com/twitter/finagle/commit/547cd86465109e6777d2afb98a7560d6a053b7b4"&gt;1&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/commit/50c00d8847e0e5f3ade029ee3a51b5e2e795f115"&gt;2&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/commit/33841d214af7506750d6106fdeb0d95fbd95cc42"&gt;3&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/commit/5a5ceb63740480381a2a137474afa5c39ad23981"&gt;4&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/commit/5a5ceb63740480381a2a137474afa5c39ad23981"&gt;5&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Finatra security update. Jackson Upgraded 2.8.4 =&amp;gt; 2.9.6, plugs
&lt;a href="https://nvd.nist.gov/vuln/detail/CVE-2017-7525"&gt;CVE-2017-7525&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Future.transform&lt;/code&gt; creates a new &lt;code&gt;Promise&lt;/code&gt; every time it is called, but
sometimes we can operate directly on a &lt;code&gt;Try&lt;/code&gt;, whose operations are much
simpler and less costly. Since &lt;code&gt;transform&lt;/code&gt; is fundamental to many other
future operations, the result is faster futures. (&lt;a href="https://github.com/twitter/util/commit/3245a8e1a98bd5eb308f366678528879d7140f5e"&gt;1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Avoid unnecessary deep copies in Local.Context. (&lt;a href="https://github.com/twitter/util/commit/faaf0f2fe27520d47f896099bb8dc5f34b5d3c6a"&gt;1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Push is now the default implementation for ThriftMux. We removed the previous
implementation because we saw that Push improved throughput, CPU usage, and
allocations. (&lt;a href="https://github.com/twitter/finagle/commit/c0a1f295f58d699a77142ea2720965b63203cc89"&gt;1&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/commit/735a6bae3f8352b569ff153ec47d97a54914eee2"&gt;2&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/commit/735a6bae3f8352b569ff153ec47d97a54914eee2"&gt;3&lt;/a&gt;, &lt;a href="https://github.com/twitter/finagle/commit/eedd1fd890da85c6efcdc0ff597e22055967d811"&gt;4&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Netty3 cookies are dead, long live Netty4 cookies?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We are &lt;em&gt;almost&lt;/em&gt; there. The last threshold to cross is decoupling cookie
validation logic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Finatra&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Custom AsyncAppender with StatsReceiver integration
(&lt;a href="https://twitter.github.io/finatra/user-guide/logging/asyncappender.html"&gt;1&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Better/easier configuration for https servers. (&lt;a href="https://github.com/twitter/finatra/commit/3c19b2df303a30fda254822dc97cb2372d2220b3"&gt;1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Travis-CI&lt;/strong&gt; MANY stability improvements.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Thanks for following along. If you&amp;rsquo;d like to know more about any one of these
updates, or if you have a question about them, join us on the
&lt;a href="https://groups.google.com/forum/#!forum/finaglers"&gt;Finagle&lt;/a&gt; or
&lt;a href="https://groups.google.com/forum/#!forum/finatra-users"&gt;Finatra&lt;/a&gt; mailing lists
or hop on &lt;a href="https://gitter.im/twitter/finagle"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy coding,&lt;/p&gt;

&lt;p&gt;Neuman and the Core Systems Libraries team&lt;/p&gt;
</content>
  </entry>
</feed>
